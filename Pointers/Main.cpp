#include <iostream>
#include <cstdlib>
#include <ctime>
#include <algorithm>

template <typename T>
void my_swap(T num1, T num2) {
	T tmp = num1;
	num1 = num2;
	num2 = tmp;

}

template <typename T>
void p_swap(T* pnum1, T* pnum2) {
	T tmp = *pnum1;
	*pnum1 = *pnum2;
	*pnum2 = tmp;
}

int main() {
	setlocale(LC_ALL, "Russian");
	int n, m;

	// Что такое указатель ?
	/* Переменная, созданная для хранения в себе адреса какой - либо области памяти.
	Например, указатель может хранить адрес созданной ранее в программе переменной.*/

	// Что такое разыменование ?
	/* Разыменование - это операция, позволяющая обратиться к области памяти,
	адрес которой хранится в указателе.*/

	// Указатели на переменные.
	n = 10; m = 20;
	std::cout << "n = " << n << std::endl;
	std::cout << "&n = " << &n << std::endl; // & - Получение адресса объекта.

	int* pn = &n; // Создание указателя, направленного на переменную n.
	std::cout << "pn = " << pn << std::endl; // Вывод адресса, хранящегося в указателе.

	// Разыменование.
	std::cout << "*pn = " << *pn << std::endl; // Вывод n через разыменование pn.
	*pn = 15;
	std::cout << "Новая n = " << n << std::endl;
	
	pn = &m; // Перенаправление указателя на адрес переменнной m.
	std::cout << "m = " << m << std::endl;
	std::cout << "&m = " << &m << std::endl;
	std::cout << "pn = " << pn << std::endl;
	std::cout << "*pn = " << *pn << std::endl;

	int* pm = &m;
	std::cout << "pm = " << pm << std::endl;
	
	// Указатели и массивы.
	const int size = 5;
	int arr[size]{ 10, 9, 50, 30, 14 };
	int* pa2 = &arr[2];
	std::cout << "*pa2 = " << *pa2 << std::endl; // 50
	
	// Арифметика указателей
	/*
	Процесс сдвига указателя относительно текущего адреса, который в нём записан,
	вперёд (при сложении) назад (при вычитании).
	*/
	
	pa2++;
	std::cout << "*pa2 = " << *pa2 << std::endl; // 30
	pa2 -= 2;
	std::cout << "*pa2 = " << *pa2 << std::endl;
	
	// Указатели с циклом.
	pa2 = &arr[0];
	std::cout << "Массивы: ";
	for (int i = 0; i < size; i++)
		std::cout << *(pa2 + i) << ' ';
	std::cout << std::endl;

	std::cout << "arr = " << arr << std::endl;
	std::cout << "arr + 1 = " << arr + 1 << std::endl;
	// arr++; // ОШИБКА!
	
	// Указатели и функции.
	n = 7, m = 15;
	std::cout << n << ' ' << m << std::endl;
	// my_swap(n, m); // Не работает, т.к параметры это копии.
	p_swap(&n, &m);
	std::cout << n << ' ' << m << std::endl;

	// Области применения указателей.
	/*
	1. Работа с массивами;
	2. Выделение динамической памяти;
	3. Доступ к элементам из разных блоков программы (Из разных функций);
	4. Экономия памяти.

	Размер указателя не зависит от типа данных, установленного при его объявлении.
	Он зависит от разрядности операционной системы устройства. У 32-битных ОС размер - 4 байта,
	а у 64-битных - 8 байтов.
	*/
	

	return 0;
}